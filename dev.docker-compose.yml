# For the lazy:
# Build: docker compose -f .\dev.docker-compose.yml build --no-cache
# Run: docker compose -f .\dev.docker-compose.yml up
# Run with watch: docker compose -f .\dev.docker-compose.yml watch
# ^ Watches the local directory for changes and updates all containers without killing them.

version: '3.1'

name: bitorch-development

services:
  peer0:
    container_name: peer0
    command: /bin/sh -c "env && pipenv run python run.py"
    build:
      context: .
      dockerfile: dev.dockerfile
    develop:
      watch:
        - action: sync
          path: ./
          target: /Bitorch
          ignore:
            - ./.venv
        - action: rebuild
          path: ./Pipfile
    ports:
      - "8000:8000"
    env_file:
      - .docker.env
    environment:
      - PEER_NAME=peer0
      - BACKEND_PORT=8000
      # Set db here so that we can simulate multiple nodes with a single mongodb container with their own db's:
      - DB_NAME=peer0
    stdin_open: true
    tty: true
    depends_on:
      - mongo

  mongo:
    container_name: mongo
    image: mongo:6.0
    ports:
      - "27017:27017"

networks:
  default:
    driver: bridge
